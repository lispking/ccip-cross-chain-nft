/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DestinationMinter,
  DestinationMinterInterface,
} from "../../contracts/DestinationMinter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
    ],
    name: "FailedToMintCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
    ],
    name: "MintCallSuccessfull",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162000c7e38038062000c7e833981810160405281019062000037919062000194565b81600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517fd7f73334000000000000000000000000000000000000000000000000000000008152600401620000a49190620001ec565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000209565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200015c826200012f565b9050919050565b6200016e816200014f565b81146200017a57600080fd5b50565b6000815190506200018e8162000163565b92915050565b60008060408385031215620001ae57620001ad6200012a565b5b6000620001be858286016200017d565b9250506020620001d1858286016200017d565b9150509250929050565b620001e6816200014f565b82525050565b6000602082019050620002036000830184620001db565b92915050565b608051610a526200022c60003960008181610184015261022b0152610a526000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a71461004657806385572ffb14610076578063b0f479a114610092575b600080fd5b610060600480360381019061005b919061040c565b6100b0565b60405161006d9190610454565b60405180910390f35b610090600480360381019061008b9190610493565b610182565b005b61009a610227565b6040516100a7919061051d565b60405180910390f35b60007f85572ffb000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061017b57507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461021257336040517fd7f73334000000000000000000000000000000000000000000000000000000008152600401610209919061051d565b60405180910390fd5b6102248161021f90610958565b61024f565b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826060015160405161029b91906109dc565b6000604051808303816000865af19150503d80600081146102d8576040519150601f19603f3d011682016040523d82523d6000602084013e6102dd565b606091505b5050905080610345573360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517f936fcd8300000000000000000000000000000000000000000000000000000000815260040161033c9291906109f3565b60405180910390fd5b7fa3d670c8750af9ba9c705723ef6d7e748debc0306dc99ad80ca34b68bfbc029d60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051610394919061051d565b60405180910390a15050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6103e9816103b4565b81146103f457600080fd5b50565b600081359050610406816103e0565b92915050565b600060208284031215610422576104216103aa565b5b6000610430848285016103f7565b91505092915050565b60008115159050919050565b61044e81610439565b82525050565b60006020820190506104696000830184610445565b92915050565b600080fd5b600060a0828403121561048a5761048961046f565b5b81905092915050565b6000602082840312156104a9576104a86103aa565b5b600082013567ffffffffffffffff8111156104c7576104c66103af565b5b6104d384828501610474565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610507826104dc565b9050919050565b610517816104fc565b82525050565b6000602082019050610532600083018461050e565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105868261053d565b810181811067ffffffffffffffff821117156105a5576105a461054e565b5b80604052505050565b60006105b86103a0565b90506105c4828261057d565b919050565b600080fd5b6000819050919050565b6105e1816105ce565b81146105ec57600080fd5b50565b6000813590506105fe816105d8565b92915050565b600067ffffffffffffffff82169050919050565b61062181610604565b811461062c57600080fd5b50565b60008135905061063e81610618565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff8211156106695761066861054e565b5b6106728261053d565b9050602081019050919050565b82818337600083830152505050565b60006106a161069c8461064e565b6105ae565b9050828152602081018484840111156106bd576106bc610649565b5b6106c884828561067f565b509392505050565b600082601f8301126106e5576106e4610644565b5b81356106f584826020860161068e565b91505092915050565b600067ffffffffffffffff8211156107195761071861054e565b5b602082029050602081019050919050565b600080fd5b610738816104fc565b811461074357600080fd5b50565b6000813590506107558161072f565b92915050565b6000819050919050565b61076e8161075b565b811461077957600080fd5b50565b60008135905061078b81610765565b92915050565b6000604082840312156107a7576107a6610538565b5b6107b160406105ae565b905060006107c184828501610746565b60008301525060206107d58482850161077c565b60208301525092915050565b60006107f46107ef846106fe565b6105ae565b905080838252602082019050604084028301858111156108175761081661072a565b5b835b81811015610840578061082c8882610791565b845260208401935050604081019050610819565b5050509392505050565b600082601f83011261085f5761085e610644565b5b813561086f8482602086016107e1565b91505092915050565b600060a0828403121561088e5761088d610538565b5b61089860a06105ae565b905060006108a8848285016105ef565b60008301525060206108bc8482850161062f565b602083015250604082013567ffffffffffffffff8111156108e0576108df6105c9565b5b6108ec848285016106d0565b604083015250606082013567ffffffffffffffff8111156109105761090f6105c9565b5b61091c848285016106d0565b606083015250608082013567ffffffffffffffff8111156109405761093f6105c9565b5b61094c8482850161084a565b60808301525092915050565b60006109643683610878565b9050919050565b600081519050919050565b600081905092915050565b60005b8381101561099f578082015181840152602081019050610984565b60008484015250505050565b60006109b68261096b565b6109c08185610976565b93506109d0818560208601610981565b80840191505092915050565b60006109e882846109ab565b915081905092915050565b6000604082019050610a08600083018561050e565b610a15602083018461050e565b939250505056fea264697066735822122093d525ac9b46482231aac0680affba57e43ccf67f68eeb9c064e83251fba196364736f6c63430008130033";

type DestinationMinterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DestinationMinterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DestinationMinter__factory extends ContractFactory {
  constructor(...args: DestinationMinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    router: AddressLike,
    nftAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(router, nftAddress, overrides || {});
  }
  override deploy(
    router: AddressLike,
    nftAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(router, nftAddress, overrides || {}) as Promise<
      DestinationMinter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DestinationMinter__factory {
    return super.connect(runner) as DestinationMinter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DestinationMinterInterface {
    return new Interface(_abi) as DestinationMinterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DestinationMinter {
    return new Contract(address, _abi, runner) as unknown as DestinationMinter;
  }
}
